---
- hosts: servers
  vars_files:
    - vars.yml
  gather_facts: false
  become: yes

  tasks:
    - name: install system packages
      apt: pkg={{ item }} update-cache=yes
      with_items: "{{ system_packages }}"

    - name: Save ssh private key to server
      copy:
        src: "{{ ssh_private_key }}"
        dest: /root/.ssh/id_rsa
        mode: 0600

    - name: create directory for app
      file: path={{ install_root }}/{{ project_name }} state=directory

    - name: enable ngnix at startup
          service: name=nginx enabled=yes

    - name: Add Docker repository key
      apt_key:
        id: "58118E89F3A912897C070ADBF76221572C52609D"
        keyserver: "hkp://ha.pool.sks-keyservers.net:80"
        state: present

    - name: print to stdout
      command: echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | tee /etc/apt/sources.list.d/docker.list
      update_cache: yes
      state: present

    - name: Install docker engine
      apt:
        pkg: docker engine
        state: installed

    - name: Make sure docker is running
      service:
        name: docker
        state: started

    - name: add group docker
      groupadd:
        name: docker
        state: present

    - name: add user to docker group
      user:
        name: {{ user }}
        group: docker
        append: yes

    - systemd:
      name: docker
      state: started
      enabled: True

    - name: reboot server
      shell: reboot
      async: 0
      poll: 0

    - name: data container
      docker:
        name: desdata
        image: busybox
        state: present
        volumes:
        - /data

    - name: mongo container
      docker:
        name: mongodes
        image: mongo
        state: started
        expose:
        - 27017
        volumes_from:
        - desdata

    - name: make sure mongodb is running
      docker:
        name: mongodes
        state: started

    - name: set db root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        host: localhost
        priv: "*.*:ALL,GRANT"
        state: "present"
      with_items:
        - "{{ server_name }}"
        - 127.0.0.1
        - ::1
        - localhost
      
    - name: create database
      mysql_db:
        name: "{{ db_name }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: create database user
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"        
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL"

    - name: remove default nginx site
      file: path=/etc/nginx/sites-enabled/default state=absent

- include: deploy.yml

# vim:ft=ansible:
