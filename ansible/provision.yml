---
- hosts: servers
  vars_files:
    - vars.yml
  gather_facts: false
  become: yes

  tasks:
    - name: install system packages
      apt: pkg={{ item }} update-cache=yes
      with_items: "{{ system_packages }}"

    - name: Save ssh private key to server
      copy:
        src: "{{ ssh_private_key }}"
        dest: /root/.ssh/id_rsa
        mode: 0600

    - name: create directory for app
      file: path={{ install_root }}/{{ project_name }} state=directory

    - name: enable ngnix at startup
      service: name=nginx enabled=yes

    - name: Add Docker repository key
      apt_key:
        id: "58118E89F3A912897C070ADBF76221572C52609D"
        keyserver: "hkp://p80.pool.sks-keyservers.net:80"
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb https://apt.dockerproject.org/repo ubuntu-xenial main
        state: present

    - name: Apt update
      apt:
        update_cache: yes

    - name: print to stdout
      command: echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | tee /etc/apt/sources.list.d/docker.list
      #update_cache: yes
      #state: present

    - name: Install docker engine
      apt:
        pkg: docker-engine
        state: installed

    - name: Make sure docker is running
      service:
        name: docker
        state: started

    - name: add group docker
      group:
        name: docker
        state: present

    - name: add user to docker group
      user:
        name: "{{ user }}"
        group: docker
        append: yes

    - name: add system process
      systemd:
          name: docker
          state: started
          enabled: True
#
#    - name: reboot server
#      shell: sleep 2 && shutdown -r now
#      become: true
#      async: 1
#      poll: 0
#      ignore_errors: true
#
#    - name: Wait for restart
#      local_action:
#        module: wait_for
#          host= "{{inventory_hostname}}"
#          port=22
#          delay=90
#          timeout=300
#        become: false

#
#    - name: data container
#      docker:
#        name: desdata
#        image: busybox
#        state: present
#        volumes:
#        - /data

    - name: stop mongo container
      shell: docker stop mongo

    - name: remove mongo container
      shell: docker rm mongo

    - name: mongo container
      shell: docker run --name mongo -v /data:/data/db -d mongo:latest

    - name: remove default nginx site
      file: path=/etc/nginx/sites-enabled/default state=absent

# - include: deploy.yml

# vim:ft=ansible:
